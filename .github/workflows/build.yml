name: Build

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checks:
    name: General checks
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev

      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

#      - name: Install cargo-outdated
#        run: cargo install cargo-outdated

#      - name: Install cargo-audit
#        run: cargo install cargo-audit

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

#      - name: Run cargo outdated
#        uses: actions-rs/cargo@v1
#        with:
#          command: outdated
#          args: --exit-code 1

#      - name: Run cargo audit
#        uses: actions-rs/cargo@v1
#        with:
#          command: audit

  test_ubuntu:
    name: Run tests on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - name: Configure VNC
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb x11vnc xterm libwebkit2gtk-4.0-dev
          Xvfb -screen 0 800x600x16 -ac &
          x11vnc -localhost -display :0 &
          export DISPLAY=:0
          xterm -hold -e "cat /etc/passwd" &

      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Start python webserver
        run: |
          cd test
          python3 -m http.server &

      - name: Screenshot the python server
        run: |
          cargo build
          xvfb-run ./target/debug/scrying \
            -t http://localhost:8000/webpage.html \
            -t vnc://localhost:5900

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-output
          path: output/

  test_windows:
    name: Run tests on windows-latest
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Enable RDP without NLA
        shell: powershell
        run: |
          $itemprops = @{
            Path = 'HKLM:\System\CurrentControlSet\Control\Terminal Server'
            name = "fDenyTSConnections"
            Value = 0
          }
          Set-ItemProperty @itemprops
          $itemprops = @{
            Path = 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp'
            name = "UserAuthentication"
            Value = 0
          }
          Set-ItemProperty @itemprops

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Screenshot the web and RDP servers
        run: |
          cd test
          python3 -m http.server &
          cd ..
          cargo run -- -t rdp://localhost -t http://localhost:8000/webpage.html

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-output
          path: output/

  test_macos:
    name: Run tests on macOS-latest
    runs-on: macOS-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Start python webserver
        run: |
          cd test
          python3 -m http.server &

      - name: Screenshot the python server
        run: |
          cargo run -- -t http://localhost:8000/webpage.html

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-output
          path: output/
